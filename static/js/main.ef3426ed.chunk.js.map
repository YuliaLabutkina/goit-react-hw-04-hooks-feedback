{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/App/App.js","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","className","s","text","Statistics","good","neutral","bad","total","positivePercentage","title","textItem","FeedbackOptions","options","onLeaveFeedback","map","option","id","button","onClick","propTypes","PropTypes","string","isRequired","children","element","Section","wrapper","App","useState","setGood","setNeutral","setBad","event","target","textContent","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uNAWeA,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGC,UAAWC,IAAEC,KAAhB,SAAuBH,K,gBC2BjBI,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAIR,UAAWC,IAAEQ,MAAjB,wBACW,IAAVF,EACC,cAAC,EAAD,CAAcR,QAAQ,sBAEtB,gCACE,oBAAGC,UAAWC,IAAES,SAAhB,mBAAiCN,KACjC,oBAAGJ,UAAWC,IAAES,SAAhB,sBAAoCL,KACpC,oBAAGL,UAAWC,IAAES,SAAhB,kBAAgCJ,KAChC,oBAAGN,UAAWC,IAAES,SAAhB,oBAAkCH,KAClC,oBAAGP,UAAWC,IAAES,SAAhB,gCAA8CF,EAA9C,c,gBCAKG,EAbS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACjB,wBAAQhB,UAAWC,IAAEgB,OAAiBC,QAASL,EAA/C,SACGE,GAD+BC,O,gCCOtClB,aAAaqB,UAAY,CACvBV,MAAOW,IAAUC,OAAOC,WACxBC,SAAUH,IAAUI,QAAQF,YAGfG,MAdC,SAAC,GAAyB,IAAvBhB,EAAsB,EAAtBA,MAAOc,EAAe,EAAfA,SACxB,OACE,sBAAKvB,UAAWC,IAAEyB,QAAlB,UACE,oBAAI1B,UAAWC,IAAEQ,MAAjB,SAAyBA,IACxBc,MCkDQI,MAlDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNxB,EADM,KACAyB,EADA,OAEiBD,mBAAS,GAF1B,mBAENvB,EAFM,KAEGyB,EAFH,OAGSF,mBAAS,GAHlB,mBAGNtB,EAHM,KAGDyB,EAHC,KAiCb,OACI,eAAC,EAAD,CAAStB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAhCY,SAAAmB,GAElB,OADaA,EAAMC,OAAOC,aAExB,IAAK,OACHL,GAAQ,SAAAM,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHL,GAAW,SAAAM,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHL,GAAO,SAAAM,GAAO,OAAIA,EAAU,SAwB5B,cAAC,EAAD,CACEjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MApBgBH,EAAOC,EAAUC,EAqBjCE,mBAfJ8B,KAAKC,MAAOnC,GAAQC,EAAUC,EAAMF,GAAS,MAAQ,QC9B3DoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,SAAW,+B,kBCA/DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,KAAO,6B,kBCAzBD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.ef3426ed.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.text}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport Notification from '../Notification';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <h2 className={s.title}>Statistics</h2>\n      {total === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <div>\n          <p className={s.textItem}>Good: {good}</p>\n          <p className={s.textItem}>Neutral: {neutral}</p>\n          <p className={s.textItem}>Bad: {bad}</p>\n          <p className={s.textItem}>Total: {total}</p>\n          <p className={s.textItem}>Positive feedback: {positivePercentage}%</p>\n        </div>\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option, id) => (\n    <button className={s.button} key={id} onClick={onLeaveFeedback}>\n      {option}\n    </button>\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={s.wrapper}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import { useState } from 'react';\n\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Section from '../Section';\n\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = event => {\n    const name = event.target.textContent;\n    switch (name) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        break;\n    };\n  };\n\n  const countTotalFeedback = () => {\n    const totalFeedback = good + neutral + bad;\n    return totalFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const positiveFeedbackPercentage =\n      Math.round((good / (neutral + bad + good)) * 100) || 0;\n    return positiveFeedbackPercentage;\n  };\n\n  return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={addFeedback}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        ></Statistics>\n      </Section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__iwKMD\",\"textItem\":\"Statistics_textItem__2u3zo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Section_wrapper__2v8QK\",\"title\":\"Section_title__3jALW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1NAz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3I59-\"};"],"sourceRoot":""}